1
00:00:00,000 --> 00:00:01,000
Okay, so now let's talk

2
00:00:01,000 --> 00:00:03,000
about EC2 Instance Types.

3
00:00:03,000 --> 00:00:06,000
So there are different types of EC2 instances

4
00:00:06,000 --> 00:00:08,000
that you can use for different use cases

5
00:00:08,000 --> 00:00:10,000
and they have different types of optimization.

6
00:00:10,000 --> 00:00:11,000
And let's go check out this link

7
00:00:11,000 --> 00:00:13,000
and we'll see we have for now,

8
00:00:13,000 --> 00:00:17,000
seven different types of EC2 instances.

9
00:00:17,000 --> 00:00:19,000
So this website on the AWS website

10
00:00:19,000 --> 00:00:21,000
is what we're interested into.

11
00:00:21,000 --> 00:00:24,000
And as we can see, we have different types of instances.

12
00:00:24,000 --> 00:00:25,000
We have general purpose, compute, optimized,

13
00:00:25,000 --> 00:00:27,000
memory optimize and so on.

14
00:00:27,000 --> 00:00:29,000
And so for each type of instance

15
00:00:29,000 --> 00:00:30,000
we have different families.

16
00:00:30,000 --> 00:00:33,000
And so as we can see this website is going to

17
00:00:33,000 --> 00:00:37,000
be the reference for us to look at Institute Instance types

18
00:00:37,000 --> 00:00:39,000
and know their costs and other specificity.

19
00:00:39,000 --> 00:00:41,000
What I'm going to do though, is just walk you

20
00:00:41,000 --> 00:00:44,000
through a high-level overview of how they work in AWS.

21
00:00:45,000 --> 00:00:48,000
AWS will have the following naming convention.

22
00:00:48,000 --> 00:00:49,000
For example, we'll be talking

23
00:00:49,000 --> 00:00:52,000
about an M five dot two X large type of instance.

24
00:00:52,000 --> 00:00:53,000
What does that mean?

25
00:00:53,000 --> 00:00:56,000
Well, M is going to be called the Instance Class.

26
00:00:56,000 --> 00:00:59,000
Okay. And this is going to be, for example, in this case

27
00:00:59,000 --> 00:01:01,000
a general purpose type of instance,

28
00:01:01,000 --> 00:01:04,000
five is generation of the instance.

29
00:01:04,000 --> 00:01:06,000
So as AWS improves the hardware over time

30
00:01:06,000 --> 00:01:09,000
if we release a new generation of hardware, and so

31
00:01:09,000 --> 00:01:13,000
after M five, if they improve the M type of instance class

32
00:01:13,000 --> 00:01:15,000
then we'll go to M six

33
00:01:15,000 --> 00:01:19,000
and then finally the two X large represented the size

34
00:01:19,000 --> 00:01:20,000
within the instance class.

35
00:01:20,000 --> 00:01:23,000
So, it starts as small and then large

36
00:01:23,000 --> 00:01:25,000
and then two X large four X large and so on.

37
00:01:25,000 --> 00:01:27,000
So it represents the size of the instance,

38
00:01:27,000 --> 00:01:29,000
and the more the size, the more the memory

39
00:01:29,000 --> 00:01:32,000
the more the CPU is going to have on your instance.

40
00:01:32,000 --> 00:01:34,000
So from an exam perspective, what do you need to know?

41
00:01:34,000 --> 00:01:36,000
Well, we'll talk about a few different types

42
00:01:36,000 --> 00:01:37,000
of instance types.

43
00:01:37,000 --> 00:01:38,000
So you have a general purpose

44
00:01:38,000 --> 00:01:41,000
and these are great for diversity of workloads

45
00:01:41,000 --> 00:01:44,000
such as web servers or code repositories.

46
00:01:44,000 --> 00:01:45,000
They will have a good balance

47
00:01:45,000 --> 00:01:48,000
between compute, memory, networking.

48
00:01:48,000 --> 00:01:49,000
And so in this course

49
00:01:49,000 --> 00:01:51,000
we'll be using general purpose instances.

50
00:01:51,000 --> 00:01:52,000
We'll be using the T2 micro

51
00:01:52,000 --> 00:01:56,000
which is the free tier, general purpose type of instance.

52
00:01:56,000 --> 00:01:58,000
On the website that I just showed you

53
00:01:58,000 --> 00:02:00,000
you will see all the different types

54
00:02:00,000 --> 00:02:02,000
of instance that our general purpose

55
00:02:02,000 --> 00:02:04,000
and this is going to evolve over time,

56
00:02:04,000 --> 00:02:05,000
So I won't update this slide.

57
00:02:05,000 --> 00:02:06,000
But you can always refer back

58
00:02:06,000 --> 00:02:09,000
to the AWS website to check what the instances are

59
00:02:09,000 --> 00:02:12,000
in the general purpose type of family.

60
00:02:12,000 --> 00:02:14,000
Then we have compute optimized,

61
00:02:14,000 --> 00:02:16,000
and these are instances are great,

62
00:02:16,000 --> 00:02:19,000
and optimized for compute intensive tasks.

63
00:02:19,000 --> 00:02:23,000
So what requires a high level of processor?

64
00:02:23,000 --> 00:02:24,000
Well, if, for example, it could be

65
00:02:24,000 --> 00:02:26,000
if you're batch processing some data

66
00:02:26,000 --> 00:02:27,000
if you're doing media transcoding

67
00:02:27,000 --> 00:02:30,000
if you need a high-performance web servers

68
00:02:30,000 --> 00:02:32,000
if you're doing high performance, computing is called HPC.

69
00:02:32,000 --> 00:02:34,000
If you're doing machine learning

70
00:02:34,000 --> 00:02:36,000
or if you have a dedicated gaming server.

71
00:02:36,000 --> 00:02:40,000
So all these things are tasks that require a very good CPU

72
00:02:40,000 --> 00:02:42,000
very good compute side.

73
00:02:42,000 --> 00:02:43,000
And so Ec2,

74
00:02:43,000 --> 00:02:47,000
instances do have this kind of particularity

75
00:02:47,000 --> 00:02:51,000
and for now all the computer optimized instances

76
00:02:51,000 --> 00:02:55,000
in EC2, are of the C names.

77
00:02:55,000 --> 00:02:57,000
So C5, C6, and so on.

78
00:02:57,000 --> 00:03:01,000
Next, we have some EC2 instances that are memory optimized

79
00:03:01,000 --> 00:03:02,000
and there are going to be

80
00:03:02,000 --> 00:03:05,000
have a really fast performance for the type

81
00:03:05,000 --> 00:03:09,000
of workloads that will process large datasets in memory.

82
00:03:09,000 --> 00:03:10,000
So memory means RAM.

83
00:03:10,000 --> 00:03:12,000
And so the use cases are this is going to

84
00:03:12,000 --> 00:03:14,000
be high performance for relational or

85
00:03:14,000 --> 00:03:16,000
non-relational databases are mostly going to be

86
00:03:16,000 --> 00:03:18,000
in memory databases,

87
00:03:18,000 --> 00:03:20,000
distributed web-scale cache store.

88
00:03:20,000 --> 00:03:22,000
So for our elastic cache, for example

89
00:03:22,000 --> 00:03:24,000
in memory databases that are optimized

90
00:03:24,000 --> 00:03:27,000
for business intelligence or BI.

91
00:03:27,000 --> 00:03:30,000
And applications performing real-time processing

92
00:03:30,000 --> 00:03:32,000
of big unstructured data.

93
00:03:32,000 --> 00:03:36,000
So in terms of the names for the memory optimized instances

94
00:03:36,000 --> 00:03:39,000
there's going to be the R series because R stands for RAM

95
00:03:39,000 --> 00:03:42,000
but there's also going to be X one high memory and Z one,

96
00:03:42,000 --> 00:03:44,000
but again, you don't have to remember the name

97
00:03:44,000 --> 00:03:47,000
of the instances, but good to know at a high level.

98
00:03:47,000 --> 00:03:51,000
Okay. And finally we'll have storage optimized instances.

99
00:03:51,000 --> 00:03:54,000
They're great when you are accessing a lot

100
00:03:54,000 --> 00:03:57,000
of data sets on the local storage.

101
00:03:57,000 --> 00:03:59,000
And so the use cases for storage optimized instances

102
00:03:59,000 --> 00:04:02,000
are going to be high-frequency online

103
00:04:02,000 --> 00:04:04,000
transactional processing, so OLTP systems.

104
00:04:04,000 --> 00:04:06,000
Relational and NoSQL databases.

105
00:04:06,000 --> 00:04:07,000
And we'll see those in details.

106
00:04:07,000 --> 00:04:09,000
When we get to the database sections.

107
00:04:09,000 --> 00:04:11,000
Cache for in-memory databases, for example,

108
00:04:11,000 --> 00:04:14,000
Reddit's data warehousing application

109
00:04:14,000 --> 00:04:15,000
distributed file systems

110
00:04:15,000 --> 00:04:19,000
and the search optimized instances in AWS

111
00:04:19,000 --> 00:04:21,000
will start with an I, a G, or H one.

112
00:04:21,000 --> 00:04:23,000
Okay. But again, don't have to remember this.

113
00:04:23,000 --> 00:04:25,000
I'm just giving you examples.

114
00:04:25,000 --> 00:04:27,000
So what does it mean?

115
00:04:27,000 --> 00:04:28,000
Let's compare a few instance types.

116
00:04:28,000 --> 00:04:30,000
So for example, for t2.micro

117
00:04:30,000 --> 00:04:34,000
we have one VCPU and one memory, one gigabytes of memory.

118
00:04:34,000 --> 00:04:38,000
And if you look for example, at r5.16xlarge

119
00:04:38,000 --> 00:04:43,000
we have 16 VCPU and 512 gigabytes of memory.

120
00:04:43,000 --> 00:04:46,000
So we can see there's a lot of more emphasis on the memory.

121
00:04:46,000 --> 00:04:49,000
If we compare it to example, to a c5d.4Xlarge

122
00:04:50,000 --> 00:04:54,000
we can see we have 16 VCPU and 32 gigabytes of memory.

123
00:04:54,000 --> 00:04:57,000
So less memory, more CPU

124
00:04:57,000 --> 00:04:59,000
and so on different network performance

125
00:04:59,000 --> 00:05:00,000
different EBS bandwidth and so on.

126
00:05:00,000 --> 00:05:03,000
So just to give you a point of comparison,

127
00:05:03,000 --> 00:05:05,000
and because we're using t2.micro in this course

128
00:05:05,000 --> 00:05:07,000
it is part of the AWS feature.

129
00:05:07,000 --> 00:05:11,000
So we get up to 750 hours per month of t2.micro.

130
00:05:11,000 --> 00:05:14,000
And if you want a website to compare all the

131
00:05:14,000 --> 00:05:15,000
EC2 Institute instances together,

132
00:05:15,000 --> 00:05:16,000
there's one that I really like,

133
00:05:16,000 --> 00:05:18,000
it's called instituteinstance.info,

134
00:05:18,000 --> 00:05:20,000
and I'll show it to you right now.

135
00:05:20,000 --> 00:05:23,000
So I am on the instituteinstances.info website

136
00:05:23,000 --> 00:05:24,000
and as we can see,

137
00:05:24,000 --> 00:05:28,000
we have a list of all the instances available in AWS.

138
00:05:28,000 --> 00:05:29,000
So really, a lot.

139
00:05:29,000 --> 00:05:31,000
We also get some information around

140
00:05:31,000 --> 00:05:33,000
the Linux on demand cost and an X reserves cost,

141
00:05:33,000 --> 00:05:35,000
and so on, so some cost information.

142
00:05:35,000 --> 00:05:38,000
We get information around the memory the number of VCPU.

143
00:05:38,000 --> 00:05:40,000
We can order by name, we can search it.

144
00:05:40,000 --> 00:05:41,000
So it's, it's quite handy.

145
00:05:41,000 --> 00:05:42,000
And I really like this website.

146
00:05:42,000 --> 00:05:44,000
And if you go and use AWS

147
00:05:44,000 --> 00:05:47,000
you probably will use this website as well.

148
00:05:47,000 --> 00:05:48,000
So that's it for this lecture.

149
00:05:48,000 --> 00:05:49,000
I hope you liked it.

150
00:05:49,000 --> 00:05:51,000
And I will see you in the next lecture.

